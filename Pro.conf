[General]
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,e.crashlynatics.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# 自定义 DNS 服务器，Loon 会优先使用自定义 DNS，若丢包严重，会切回系统自带的 DNS，使用 , 分割多个 DNS 地址
dns-server = 119.29.29.29,223.5.5.5,system
allow-udp-proxy = false
host = 127.0.0.1

[Proxy]
# 单个节点添加在下面
# SS 格式: 节点名称 = 协议，服务器地址，服务器端口，加密协议，密码
1 = Shadowsocks, 1.2.3.4, 443, aes-128-gcm, "password"
2 = Shadowsocks, 1.2.3.4, 443, aes-128-gcm, "password"

# SSR 格式: 名称=协议类型,地址,端口,加密方式,密码,协议类型,{协议参数},混淆类型,{混淆参数}
3 = ShadowsocksR, 1.2.3.4, 443, aes-256-cfb,"password",auth_aes128_md5,{},tls1.2_ticket_auth,{}
4 = ShadowsocksR, 1.2.3.4, 10076, aes-128-cfb,"password",auth_aes128_md5,{},tls1.2_ticket_auth,{}

# vmess格式
# 节点名称 = 协议,服务器地址,端口,加密方式,UUID,传输方式:(tcp/ws),path:websocket握手header中的path,host:websocket握手header中的path,over-tls:是否tls,tls-name:远端w服务器域名,skip-cert-verify:是否跳过证书校验（默认否）
5 = vmess,1.2.3.4,10086,aes-128-gcm,"uuid",transport:ws,path:/,host:icloud.com,over-tls:true,tls-name:youtTlsServerName.com,skip-cert-verify:false

# http 格式 (不支持 username, password)
# 节点名称 = http, 服务器地址，端口
ProxyHTTP = http, 1.2.3.4, 8888

[Remote Proxy]
# 订阅节点
# 格式为 别名 = 订阅 URL
Subs = https://example/server-complete.txt

[Proxy Group]
# 以下为策略组定义
# 支持 select、url-test、fallback、ssid 这几种类型

# 基于用户 UI 选择
PROXY = select,Auto,1,2,3,4,Subs

# url-test模式，给提供的 url 发出 http header 请求，根据返回结果，选择测速最快的节点，默认间隔 600s，测速超时时间5s，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
Auto = url-test,1,2,3,4,Subs,url = http://bing.com/,interval = 600

# fallback 模式，和 url-test类似，不同的是会根据顺序返回第一个可用的节点，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
Fallback = fallback,1,2,3,4,Subs,url = http://bing.com/,interval = 600

# 别名 = ssid，默认 = 策略组名， 蜂窝 = 策略， ssid名称 = 策略组名
SSID = ssid, default = PROXY, cellular = DIRECT, "DivineEngine" = PROXY

# 广告模式
Advertising = select,REJECT,DIRECT

# 白名单模式 PROXY，黑名单模式 DIRECT
Final = select,PROXY,DIRECT

[Rule]
# 本地规则部分书写在下面
# 格式为 **规则类型,域名(部分类型可省略),策略**
#             
# 目前支持的类型有      
# DOMAIN-SUFFIX  基于域名后缀
# DOMAIN         基于域名完整匹配
# DOMAIN-KEYWORD 基于域名关键字
# USER-AGENT     基于用户代理串
# URL-REGEX      基于 URL 正则
# IP-CIDR        基于请求 IP 范围
# GEOIP          基于 IP 定位国家编码
# FINAL          兜底策略，所有策略都未匹配上时使用
#
# 目前支持的策略有
# DIRECT 直连，即所有流量不通过代理，在国内就走国内IP，在国外就走国外IP
# Proxy  策略组名, 这里可自定义名字，名字值为 [Proxy Group] 或者 [Proxy] 中的自定的值
# REJECT 拒绝策略，通常用作去广告
#
# 可选项:force-remote-dns(Default:false),no-resolve
DOMAIN,google.com,PROXY
# GeoIP 为中国的，走直连
GEOIP,CN,DIRECT
# 兜底策略使用 Final 策略组
FINAL,Final

[Remote Rule]
# 远程规则部分书写在下面
# 格式为 订阅规则 URL**,策略**

# 如以下地址将使用，PROXY 这个策略组
https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rule/ExampleRule.list,PROXY

[URL Rewrite]
# URL 重写开关，为 true 表示开启
enable = true

# 本地重写规则部分书写在下面
#
# 302 重定向 google search
^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302

[Remote Rewrite]
# 远程重写规则部分书写在下面
# 格式为 远程重写规则 URL**,别名(可选)**

https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,auto

[MITM]
hostname = *.example.com,*.sample.com
enable = true
skip-server-cert-verify = true
#ca-p12 =
#ca-passphrase =
